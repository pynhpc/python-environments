{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"01-tutorial/","text":"Managing Python Packages with Conda Environments on the Cluster Conda environments are an excellent method for managing python packages and libraries in the cluster environment. One approach on clusters is using a centralized Anaconda3 Module, but from experience this usually caused path issues and prevented other modules from working correctly. Instead, it is possible to use a mini version of Anaconda, miniconda which includes just conda and its dependencies. It is also very small and can be downloaded directly to your /home directory. The following instructions have steps for idownloading and installing Miniconda in your home directory on the cluster and running it. Installing Maker in a python virtual environment with Miniconda3 Download miniconda3: wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh Install it in your preferred path: bash miniconda.sh -b -p $HOME/miniconda You can now create a custom conda environment. In the steps below, a conda environment for the package 'Maker' is created from a conda environment file. Activate base conda environment: source $HOME/miniconda/bin/activate export PYTHONNOUSERSITE=true Download and create your virtual environment for maker using the environment yml file. This was generated from tests on the cluster so it should have all the necessary libraries. To download the environment.yml file maker_3.01.03_environment.yml use: wget https://wiki.orc.gmu.edu/mkdocs/maker/maker_3.01.03_environment.yml Then create the virtual environemnt with: conda env create -f maker_3.01.03_environment.yml You should now be able to activate it with: conda activate maker_3.01.03 Alternatively, you can simply create the environment with conda env create -n maker_env then activate it and install necessary libraries/use python with conda activate maker_3.01.03 python Running in batch mode with SLURM Below is an example of a SLURM script ( run.slurm ) to run in this conda environment. You can modify the different SLURM parameters to match what you need: Download the run.slurm script: wget https://wiki.orc.gmu.edu/mkdocs/maker/run.slurm #!/bin/bash #SBATCH --job-name=maker_test #SBATCH --partition=normal #SBATCH --nodes=1 #SBATCH --ntasks-per-node=64 #SBATCH --output=maker_test_%j.out #SBATCH --error=maker_test_%j.err #SBATCH --mem=50GB #SBATCH --time=0-12:00:00 ### Load modules module unload openmpi4 module load gnu10 openmpi ### Activate virtual environment source /home/$USER/miniconda/bin/activate source activate maker_3.01.03 ### Set environment variables: export LIBDIR=/home/$USER/miniconda/envs/maker_3.01.03/share/RepeatMasker/Libraries ### Execute program mpiexec -n ${SLURM_NTASKS_PER_NODE} maker [OPTIONS] Run this with the sbatch command: sbatch run.slurm If you ssh onto the node on which the jobs starts, you should see it now utilizes all the available cpus for maker. To see which nodes the job is running on, you can use the squeue command: squeue --me Examples: You can also install the theme by copying all of the theme files[^structure] into your project. To do so fork the Minimal Mistakes theme , then rename the repo to USERNAME.github.io --- replacing USERNAME with your GitHub username. GitHub Pages Alternatives: Looking to host your site for free and install/update the theme painlessly? [Netlify][netlify-jekyll], [GitLab Pages][gitlab-jekyll], and [Continuous Integration (CI) services][ci-jekyll] have you covered. In most cases all you need to do is connect your repository to them, create a simple configuration file, and install the theme following the Ruby Gem Method above. {: .notice--info} Remove the Unnecessary If you forked or downloaded the minimal-mistakes-jekyll repo you can safely remove the following folders and files: .editorconfig .gitattributes .github /docs /test CHANGELOG.md minimal-mistakes-jekyll.gemspec README.md screenshot-layouts.png screenshot.png Note: If forking the theme be sure to update Gemfile as well. The one found at the root of the project is for building the theme's Ruby gem and is missing dependencies. To properly setup a Gemfile with the theme, consult the \" Install Dependencies \" section. {: .notice--warning} Setup Your Site Depending on the path you took installing Minimal Mistakes you'll setup things a little differently. ProTip: The source code and content files for this site can be found in the /docs folder if you want to copy or learn from them. {: .notice--info} Then run bundle update and add theme: minimal-mistakes-jekyll to your _config.yml . v4 Breaking Change: Paths for image headers, overlays, teasers, galleries , and feature rows have changed and now require a full path. Instead of just image: filename.jpg you'll need to use the full path eg: image: /assets/images/filename.jpg . The preferred location is now /assets/images/ but can be placed elsewhere or externally hosted. This applies to image references in _config.yml and author.yml as well. {: .notice--danger} That's it! If all goes well running bundle exec jekyll serve should spin-up your site.","title":"Tutorial"},{"location":"01-tutorial/#managing-python-packages-with-conda-environments-on-the-cluster","text":"Conda environments are an excellent method for managing python packages and libraries in the cluster environment. One approach on clusters is using a centralized Anaconda3 Module, but from experience this usually caused path issues and prevented other modules from working correctly. Instead, it is possible to use a mini version of Anaconda, miniconda which includes just conda and its dependencies. It is also very small and can be downloaded directly to your /home directory. The following instructions have steps for idownloading and installing Miniconda in your home directory on the cluster and running it.","title":"Managing Python Packages with Conda Environments on the Cluster"},{"location":"01-tutorial/#installing-maker-in-a-python-virtual-environment-with-miniconda3","text":"Download miniconda3: wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh Install it in your preferred path: bash miniconda.sh -b -p $HOME/miniconda You can now create a custom conda environment. In the steps below, a conda environment for the package 'Maker' is created from a conda environment file. Activate base conda environment: source $HOME/miniconda/bin/activate export PYTHONNOUSERSITE=true Download and create your virtual environment for maker using the environment yml file. This was generated from tests on the cluster so it should have all the necessary libraries. To download the environment.yml file maker_3.01.03_environment.yml use: wget https://wiki.orc.gmu.edu/mkdocs/maker/maker_3.01.03_environment.yml Then create the virtual environemnt with: conda env create -f maker_3.01.03_environment.yml You should now be able to activate it with: conda activate maker_3.01.03 Alternatively, you can simply create the environment with conda env create -n maker_env then activate it and install necessary libraries/use python with conda activate maker_3.01.03 python","title":"Installing Maker in a python virtual environment with Miniconda3"},{"location":"01-tutorial/#running-in-batch-mode-with-slurm","text":"Below is an example of a SLURM script ( run.slurm ) to run in this conda environment. You can modify the different SLURM parameters to match what you need: Download the run.slurm script: wget https://wiki.orc.gmu.edu/mkdocs/maker/run.slurm #!/bin/bash #SBATCH --job-name=maker_test #SBATCH --partition=normal #SBATCH --nodes=1 #SBATCH --ntasks-per-node=64 #SBATCH --output=maker_test_%j.out #SBATCH --error=maker_test_%j.err #SBATCH --mem=50GB #SBATCH --time=0-12:00:00 ### Load modules module unload openmpi4 module load gnu10 openmpi ### Activate virtual environment source /home/$USER/miniconda/bin/activate source activate maker_3.01.03 ### Set environment variables: export LIBDIR=/home/$USER/miniconda/envs/maker_3.01.03/share/RepeatMasker/Libraries ### Execute program mpiexec -n ${SLURM_NTASKS_PER_NODE} maker [OPTIONS] Run this with the sbatch command: sbatch run.slurm If you ssh onto the node on which the jobs starts, you should see it now utilizes all the available cpus for maker. To see which nodes the job is running on, you can use the squeue command: squeue --me","title":"Running in batch mode with SLURM"},{"location":"01-tutorial/#examples","text":"You can also install the theme by copying all of the theme files[^structure] into your project. To do so fork the Minimal Mistakes theme , then rename the repo to USERNAME.github.io --- replacing USERNAME with your GitHub username. GitHub Pages Alternatives: Looking to host your site for free and install/update the theme painlessly? [Netlify][netlify-jekyll], [GitLab Pages][gitlab-jekyll], and [Continuous Integration (CI) services][ci-jekyll] have you covered. In most cases all you need to do is connect your repository to them, create a simple configuration file, and install the theme following the Ruby Gem Method above. {: .notice--info}","title":"Examples:"},{"location":"01-tutorial/#remove-the-unnecessary","text":"If you forked or downloaded the minimal-mistakes-jekyll repo you can safely remove the following folders and files: .editorconfig .gitattributes .github /docs /test CHANGELOG.md minimal-mistakes-jekyll.gemspec README.md screenshot-layouts.png screenshot.png Note: If forking the theme be sure to update Gemfile as well. The one found at the root of the project is for building the theme's Ruby gem and is missing dependencies. To properly setup a Gemfile with the theme, consult the \" Install Dependencies \" section. {: .notice--warning}","title":"Remove the Unnecessary"},{"location":"01-tutorial/#setup-your-site","text":"Depending on the path you took installing Minimal Mistakes you'll setup things a little differently. ProTip: The source code and content files for this site can be found in the /docs folder if you want to copy or learn from them. {: .notice--info} Then run bundle update and add theme: minimal-mistakes-jekyll to your _config.yml . v4 Breaking Change: Paths for image headers, overlays, teasers, galleries , and feature rows have changed and now require a full path. Instead of just image: filename.jpg you'll need to use the full path eg: image: /assets/images/filename.jpg . The preferred location is now /assets/images/ but can be placed elsewhere or externally hosted. This applies to image references in _config.yml and author.yml as well. {: .notice--danger} That's it! If all goes well running bundle exec jekyll serve should spin-up your site.","title":"Setup Your Site"},{"location":"02-about/","text":"Minimal Mistakes is a flexible two-column Jekyll theme. Perfect for hosting your personal site, blog, or portfolio on GitHub or self-hosting on your own server. As the name implies --- styling is purposely minimalistic to be enhanced and customized by you :smile:. {% include gallery id=\"layouts_gallery\" caption=\"Examples of included layouts splash , single , and archive .\" %} Install the Theme {: .btn .btn--success .btn--large} Notable Features Bundled as a \"theme gem\" for easier install/upgrading. Compatible with GitHub Pages. Support for Jekyll's built-in Sass/SCSS preprocessor. Nine different skins (color variations). Several responsive layout options (single, archive index, search, splash, and paginated home page). Optimized for search engines with support for Twitter Cards and Open Graph data Optional header images , custom sidebars , table of contents , galleries , related posts, breadcrumb links , navigation lists , and more. Commenting support (powered by Disqus , Facebook , Discourse , utterances , giscus , static-based via Staticman v1 and v2 , and custom). Google Analytics support. UI localized text in English (default), Arabic (\u0639\u0631\u0628\u064a), Brazilian Portuguese (Portugu\u00eas brasileiro), Catalan, Chinese, Danish, Dutch, Finnish, French (Fran\u00e7ais), German (Deutsch), Greek, Hebrew, Hindi (\u0939\u093f\u0902\u0926\u0940), Hungarian, Indonesian, Irish (Gaeilge), Italian (Italiano), Japanese, Kiswahili, Korean, Malayalam, Myanmar (Burmese), Nepali (Nepalese), Norwegian (Norsk), Persian (\u0641\u0627\u0631\u0633\u06cc), Polish, Punjabi (\u0a2a\u0a70\u0a1c\u0a3e\u0a2c\u0a40), Romanian, Russian, Slovak, Spanish (Espa\u00f1ol), Swedish, Thai, Turkish (T\u00fcrk\u00e7e), and Vietnamese. Demo Pages Name Description [Post with Header Image][header-image-post] A post with a large header image. [HTML Tags and Formatting Post][html-tags-post] A variety of common markup showing how the theme styles them. [Syntax Highlighting Post][syntax-post] Post displaying highlighted code. [Post with a Gallery][gallery-post] A post showing several images wrapped in <figure> elements. [Sample Collection Page][sample-collection] Single page from a collection. [Categories Archive][categories-archive] Posts grouped by category. [Tags Archive][tags-archive] Posts grouped by tag. For even more demo pages check the [posts archive][year-archive]. [header-image-post]: {{ \"\" | relative_url }}{% post_url 2012-03-15-layout-header-image-text-readability %} [gallery-post]: {{ \"\" | relative_url }}{% post_url 2010-09-09-post-gallery %} [html-tags-post]: {{ \"\" | relative_url }}{% post_url 2013-01-11-markup-html-tags-and-formatting %} [syntax-post]: {{ \"\" | relative_url }}{% post_url 2013-08-16-markup-syntax-highlighting %} [sample-collection]: {{ \"/recipes/chocolate-chip-cookies/\" | relative_url }} [categories-archive]: {{ \"/categories/\" | relative_url }} [tags-archive]: {{ \"/tags/\" | relative_url }} [year-archive]: {{ \"/year-archive/\" | relative_url }} Credits Icons + Demo Images: The Noun Project -- Garrett Knoll, Arthur Shlain, and tracy tam Font Awesome Unsplash Other: Jekyll jQuery Susy Breakpoint Magnific Popup FitVids.JS Greedy Navigation - lukejacksonn jQuery Smooth Scroll Lunr Minimal Mistakes is designed, developed, and maintained by Michael Rose. Just another boring, tattooed, designer from Buffalo New York.","title":"About"},{"location":"02-about/#notable-features","text":"Bundled as a \"theme gem\" for easier install/upgrading. Compatible with GitHub Pages. Support for Jekyll's built-in Sass/SCSS preprocessor. Nine different skins (color variations). Several responsive layout options (single, archive index, search, splash, and paginated home page). Optimized for search engines with support for Twitter Cards and Open Graph data Optional header images , custom sidebars , table of contents , galleries , related posts, breadcrumb links , navigation lists , and more. Commenting support (powered by Disqus , Facebook , Discourse , utterances , giscus , static-based via Staticman v1 and v2 , and custom). Google Analytics support. UI localized text in English (default), Arabic (\u0639\u0631\u0628\u064a), Brazilian Portuguese (Portugu\u00eas brasileiro), Catalan, Chinese, Danish, Dutch, Finnish, French (Fran\u00e7ais), German (Deutsch), Greek, Hebrew, Hindi (\u0939\u093f\u0902\u0926\u0940), Hungarian, Indonesian, Irish (Gaeilge), Italian (Italiano), Japanese, Kiswahili, Korean, Malayalam, Myanmar (Burmese), Nepali (Nepalese), Norwegian (Norsk), Persian (\u0641\u0627\u0631\u0633\u06cc), Polish, Punjabi (\u0a2a\u0a70\u0a1c\u0a3e\u0a2c\u0a40), Romanian, Russian, Slovak, Spanish (Espa\u00f1ol), Swedish, Thai, Turkish (T\u00fcrk\u00e7e), and Vietnamese.","title":"Notable Features"},{"location":"02-about/#demo-pages","text":"Name Description [Post with Header Image][header-image-post] A post with a large header image. [HTML Tags and Formatting Post][html-tags-post] A variety of common markup showing how the theme styles them. [Syntax Highlighting Post][syntax-post] Post displaying highlighted code. [Post with a Gallery][gallery-post] A post showing several images wrapped in <figure> elements. [Sample Collection Page][sample-collection] Single page from a collection. [Categories Archive][categories-archive] Posts grouped by category. [Tags Archive][tags-archive] Posts grouped by tag. For even more demo pages check the [posts archive][year-archive]. [header-image-post]: {{ \"\" | relative_url }}{% post_url 2012-03-15-layout-header-image-text-readability %} [gallery-post]: {{ \"\" | relative_url }}{% post_url 2010-09-09-post-gallery %} [html-tags-post]: {{ \"\" | relative_url }}{% post_url 2013-01-11-markup-html-tags-and-formatting %} [syntax-post]: {{ \"\" | relative_url }}{% post_url 2013-08-16-markup-syntax-highlighting %} [sample-collection]: {{ \"/recipes/chocolate-chip-cookies/\" | relative_url }} [categories-archive]: {{ \"/categories/\" | relative_url }} [tags-archive]: {{ \"/tags/\" | relative_url }} [year-archive]: {{ \"/year-archive/\" | relative_url }}","title":"Demo Pages"},{"location":"02-about/#credits","text":"","title":"Credits"},{"location":"02-about/#icons-demo-images","text":"The Noun Project -- Garrett Knoll, Arthur Shlain, and tracy tam Font Awesome Unsplash","title":"Icons + Demo Images:"},{"location":"02-about/#other","text":"Jekyll jQuery Susy Breakpoint Magnific Popup FitVids.JS Greedy Navigation - lukejacksonn jQuery Smooth Scroll Lunr Minimal Mistakes is designed, developed, and maintained by Michael Rose. Just another boring, tattooed, designer from Buffalo New York.","title":"Other:"},{"location":"_docs/01-tutorial/","text":"Managing Python Packages with Conda Environments on the Cluster Conda environments are an excellent method for managing python packages and libraries in the cluster environment. One approach on clusters is using a centralized Anaconda3 Module, but from experience this usually caused path issues and prevented other modules from working correctly. Instead, it is possible to use a mini version of Anaconda, miniconda which includes just conda and its dependencies. It is also very small and can be downloaded directly to your /home directory. The following instructions have steps for idownloading and installing Miniconda in your home directory on the cluster and running it. Installing Maker in a python virtual environment with Miniconda3 Download miniconda3: wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh Install it in your preferred path: bash miniconda.sh -b -p $HOME/miniconda You can now create a custom conda environment. In the steps below, a conda environment for the package 'Maker' is created from a conda environment file. Activate base conda environment: source $HOME/miniconda/bin/activate export PYTHONNOUSERSITE=true Download and create your virtual environment for maker using the environment yml file. This was generated from tests on the cluster so it should have all the necessary libraries. To download the environment.yml file maker_3.01.03_environment.yml use: wget https://wiki.orc.gmu.edu/mkdocs/maker/maker_3.01.03_environment.yml Then create the virtual environemnt with: conda env create -f maker_3.01.03_environment.yml You should now be able to activate it with: conda activate maker_3.01.03 Alternatively, you can simply create the environment with conda env create -n maker_env then activate it and install necessary libraries/use python with conda activate maker_3.01.03 python Running in batch mode with SLURM Below is an example of a SLURM script ( run.slurm ) to run in this conda environment. You can modify the different SLURM parameters to match what you need: Download the run.slurm script: wget https://wiki.orc.gmu.edu/mkdocs/maker/run.slurm #!/bin/bash #SBATCH --job-name=maker_test #SBATCH --partition=normal #SBATCH --nodes=1 #SBATCH --ntasks-per-node=64 #SBATCH --output=maker_test_%j.out #SBATCH --error=maker_test_%j.err #SBATCH --mem=50GB #SBATCH --time=0-12:00:00 ### Load modules module unload openmpi4 module load gnu10 openmpi ### Activate virtual environment source /home/$USER/miniconda/bin/activate source activate maker_3.01.03 ### Set environment variables: export LIBDIR=/home/$USER/miniconda/envs/maker_3.01.03/share/RepeatMasker/Libraries ### Execute program mpiexec -n ${SLURM_NTASKS_PER_NODE} maker [OPTIONS] Run this with the sbatch command: sbatch run.slurm If you ssh onto the node on which the jobs starts, you should see it now utilizes all the available cpus for maker. To see which nodes the job is running on, you can use the squeue command: squeue --me Examples: You can also install the theme by copying all of the theme files[^structure] into your project. To do so fork the Minimal Mistakes theme , then rename the repo to USERNAME.github.io --- replacing USERNAME with your GitHub username. GitHub Pages Alternatives: Looking to host your site for free and install/update the theme painlessly? [Netlify][netlify-jekyll], [GitLab Pages][gitlab-jekyll], and [Continuous Integration (CI) services][ci-jekyll] have you covered. In most cases all you need to do is connect your repository to them, create a simple configuration file, and install the theme following the Ruby Gem Method above. {: .notice--info} Remove the Unnecessary If you forked or downloaded the minimal-mistakes-jekyll repo you can safely remove the following folders and files: .editorconfig .gitattributes .github /docs /test CHANGELOG.md minimal-mistakes-jekyll.gemspec README.md screenshot-layouts.png screenshot.png Note: If forking the theme be sure to update Gemfile as well. The one found at the root of the project is for building the theme's Ruby gem and is missing dependencies. To properly setup a Gemfile with the theme, consult the \" Install Dependencies \" section. {: .notice--warning} Setup Your Site Depending on the path you took installing Minimal Mistakes you'll setup things a little differently. ProTip: The source code and content files for this site can be found in the /docs folder if you want to copy or learn from them. {: .notice--info} Then run bundle update and add theme: minimal-mistakes-jekyll to your _config.yml . v4 Breaking Change: Paths for image headers, overlays, teasers, galleries , and feature rows have changed and now require a full path. Instead of just image: filename.jpg you'll need to use the full path eg: image: /assets/images/filename.jpg . The preferred location is now /assets/images/ but can be placed elsewhere or externally hosted. This applies to image references in _config.yml and author.yml as well. {: .notice--danger} That's it! If all goes well running bundle exec jekyll serve should spin-up your site.","title":"Tutorial"},{"location":"_docs/01-tutorial/#managing-python-packages-with-conda-environments-on-the-cluster","text":"Conda environments are an excellent method for managing python packages and libraries in the cluster environment. One approach on clusters is using a centralized Anaconda3 Module, but from experience this usually caused path issues and prevented other modules from working correctly. Instead, it is possible to use a mini version of Anaconda, miniconda which includes just conda and its dependencies. It is also very small and can be downloaded directly to your /home directory. The following instructions have steps for idownloading and installing Miniconda in your home directory on the cluster and running it.","title":"Managing Python Packages with Conda Environments on the Cluster"},{"location":"_docs/01-tutorial/#installing-maker-in-a-python-virtual-environment-with-miniconda3","text":"Download miniconda3: wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh Install it in your preferred path: bash miniconda.sh -b -p $HOME/miniconda You can now create a custom conda environment. In the steps below, a conda environment for the package 'Maker' is created from a conda environment file. Activate base conda environment: source $HOME/miniconda/bin/activate export PYTHONNOUSERSITE=true Download and create your virtual environment for maker using the environment yml file. This was generated from tests on the cluster so it should have all the necessary libraries. To download the environment.yml file maker_3.01.03_environment.yml use: wget https://wiki.orc.gmu.edu/mkdocs/maker/maker_3.01.03_environment.yml Then create the virtual environemnt with: conda env create -f maker_3.01.03_environment.yml You should now be able to activate it with: conda activate maker_3.01.03 Alternatively, you can simply create the environment with conda env create -n maker_env then activate it and install necessary libraries/use python with conda activate maker_3.01.03 python","title":"Installing Maker in a python virtual environment with Miniconda3"},{"location":"_docs/01-tutorial/#running-in-batch-mode-with-slurm","text":"Below is an example of a SLURM script ( run.slurm ) to run in this conda environment. You can modify the different SLURM parameters to match what you need: Download the run.slurm script: wget https://wiki.orc.gmu.edu/mkdocs/maker/run.slurm #!/bin/bash #SBATCH --job-name=maker_test #SBATCH --partition=normal #SBATCH --nodes=1 #SBATCH --ntasks-per-node=64 #SBATCH --output=maker_test_%j.out #SBATCH --error=maker_test_%j.err #SBATCH --mem=50GB #SBATCH --time=0-12:00:00 ### Load modules module unload openmpi4 module load gnu10 openmpi ### Activate virtual environment source /home/$USER/miniconda/bin/activate source activate maker_3.01.03 ### Set environment variables: export LIBDIR=/home/$USER/miniconda/envs/maker_3.01.03/share/RepeatMasker/Libraries ### Execute program mpiexec -n ${SLURM_NTASKS_PER_NODE} maker [OPTIONS] Run this with the sbatch command: sbatch run.slurm If you ssh onto the node on which the jobs starts, you should see it now utilizes all the available cpus for maker. To see which nodes the job is running on, you can use the squeue command: squeue --me","title":"Running in batch mode with SLURM"},{"location":"_docs/01-tutorial/#examples","text":"You can also install the theme by copying all of the theme files[^structure] into your project. To do so fork the Minimal Mistakes theme , then rename the repo to USERNAME.github.io --- replacing USERNAME with your GitHub username. GitHub Pages Alternatives: Looking to host your site for free and install/update the theme painlessly? [Netlify][netlify-jekyll], [GitLab Pages][gitlab-jekyll], and [Continuous Integration (CI) services][ci-jekyll] have you covered. In most cases all you need to do is connect your repository to them, create a simple configuration file, and install the theme following the Ruby Gem Method above. {: .notice--info}","title":"Examples:"},{"location":"_docs/01-tutorial/#remove-the-unnecessary","text":"If you forked or downloaded the minimal-mistakes-jekyll repo you can safely remove the following folders and files: .editorconfig .gitattributes .github /docs /test CHANGELOG.md minimal-mistakes-jekyll.gemspec README.md screenshot-layouts.png screenshot.png Note: If forking the theme be sure to update Gemfile as well. The one found at the root of the project is for building the theme's Ruby gem and is missing dependencies. To properly setup a Gemfile with the theme, consult the \" Install Dependencies \" section. {: .notice--warning}","title":"Remove the Unnecessary"},{"location":"_docs/01-tutorial/#setup-your-site","text":"Depending on the path you took installing Minimal Mistakes you'll setup things a little differently. ProTip: The source code and content files for this site can be found in the /docs folder if you want to copy or learn from them. {: .notice--info} Then run bundle update and add theme: minimal-mistakes-jekyll to your _config.yml . v4 Breaking Change: Paths for image headers, overlays, teasers, galleries , and feature rows have changed and now require a full path. Instead of just image: filename.jpg you'll need to use the full path eg: image: /assets/images/filename.jpg . The preferred location is now /assets/images/ but can be placed elsewhere or externally hosted. This applies to image references in _config.yml and author.yml as well. {: .notice--danger} That's it! If all goes well running bundle exec jekyll serve should spin-up your site.","title":"Setup Your Site"},{"location":"_docs/02-about/","text":"Minimal Mistakes is a flexible two-column Jekyll theme. Perfect for hosting your personal site, blog, or portfolio on GitHub or self-hosting on your own server. As the name implies --- styling is purposely minimalistic to be enhanced and customized by you :smile:. {% include gallery id=\"layouts_gallery\" caption=\"Examples of included layouts splash , single , and archive .\" %} Install the Theme {: .btn .btn--success .btn--large} Notable Features Bundled as a \"theme gem\" for easier install/upgrading. Compatible with GitHub Pages. Support for Jekyll's built-in Sass/SCSS preprocessor. Nine different skins (color variations). Several responsive layout options (single, archive index, search, splash, and paginated home page). Optimized for search engines with support for Twitter Cards and Open Graph data Optional header images , custom sidebars , table of contents , galleries , related posts, breadcrumb links , navigation lists , and more. Commenting support (powered by Disqus , Facebook , Discourse , utterances , giscus , static-based via Staticman v1 and v2 , and custom). Google Analytics support. UI localized text in English (default), Arabic (\u0639\u0631\u0628\u064a), Brazilian Portuguese (Portugu\u00eas brasileiro), Catalan, Chinese, Danish, Dutch, Finnish, French (Fran\u00e7ais), German (Deutsch), Greek, Hebrew, Hindi (\u0939\u093f\u0902\u0926\u0940), Hungarian, Indonesian, Irish (Gaeilge), Italian (Italiano), Japanese, Kiswahili, Korean, Malayalam, Myanmar (Burmese), Nepali (Nepalese), Norwegian (Norsk), Persian (\u0641\u0627\u0631\u0633\u06cc), Polish, Punjabi (\u0a2a\u0a70\u0a1c\u0a3e\u0a2c\u0a40), Romanian, Russian, Slovak, Spanish (Espa\u00f1ol), Swedish, Thai, Turkish (T\u00fcrk\u00e7e), and Vietnamese. Demo Pages Name Description [Post with Header Image][header-image-post] A post with a large header image. [HTML Tags and Formatting Post][html-tags-post] A variety of common markup showing how the theme styles them. [Syntax Highlighting Post][syntax-post] Post displaying highlighted code. [Post with a Gallery][gallery-post] A post showing several images wrapped in <figure> elements. [Sample Collection Page][sample-collection] Single page from a collection. [Categories Archive][categories-archive] Posts grouped by category. [Tags Archive][tags-archive] Posts grouped by tag. For even more demo pages check the [posts archive][year-archive]. [header-image-post]: {{ \"\" | relative_url }}{% post_url 2012-03-15-layout-header-image-text-readability %} [gallery-post]: {{ \"\" | relative_url }}{% post_url 2010-09-09-post-gallery %} [html-tags-post]: {{ \"\" | relative_url }}{% post_url 2013-01-11-markup-html-tags-and-formatting %} [syntax-post]: {{ \"\" | relative_url }}{% post_url 2013-08-16-markup-syntax-highlighting %} [sample-collection]: {{ \"/recipes/chocolate-chip-cookies/\" | relative_url }} [categories-archive]: {{ \"/categories/\" | relative_url }} [tags-archive]: {{ \"/tags/\" | relative_url }} [year-archive]: {{ \"/year-archive/\" | relative_url }} Credits Icons + Demo Images: The Noun Project -- Garrett Knoll, Arthur Shlain, and tracy tam Font Awesome Unsplash Other: Jekyll jQuery Susy Breakpoint Magnific Popup FitVids.JS Greedy Navigation - lukejacksonn jQuery Smooth Scroll Lunr Minimal Mistakes is designed, developed, and maintained by Michael Rose. Just another boring, tattooed, designer from Buffalo New York.","title":"About"},{"location":"_docs/02-about/#notable-features","text":"Bundled as a \"theme gem\" for easier install/upgrading. Compatible with GitHub Pages. Support for Jekyll's built-in Sass/SCSS preprocessor. Nine different skins (color variations). Several responsive layout options (single, archive index, search, splash, and paginated home page). Optimized for search engines with support for Twitter Cards and Open Graph data Optional header images , custom sidebars , table of contents , galleries , related posts, breadcrumb links , navigation lists , and more. Commenting support (powered by Disqus , Facebook , Discourse , utterances , giscus , static-based via Staticman v1 and v2 , and custom). Google Analytics support. UI localized text in English (default), Arabic (\u0639\u0631\u0628\u064a), Brazilian Portuguese (Portugu\u00eas brasileiro), Catalan, Chinese, Danish, Dutch, Finnish, French (Fran\u00e7ais), German (Deutsch), Greek, Hebrew, Hindi (\u0939\u093f\u0902\u0926\u0940), Hungarian, Indonesian, Irish (Gaeilge), Italian (Italiano), Japanese, Kiswahili, Korean, Malayalam, Myanmar (Burmese), Nepali (Nepalese), Norwegian (Norsk), Persian (\u0641\u0627\u0631\u0633\u06cc), Polish, Punjabi (\u0a2a\u0a70\u0a1c\u0a3e\u0a2c\u0a40), Romanian, Russian, Slovak, Spanish (Espa\u00f1ol), Swedish, Thai, Turkish (T\u00fcrk\u00e7e), and Vietnamese.","title":"Notable Features"},{"location":"_docs/02-about/#demo-pages","text":"Name Description [Post with Header Image][header-image-post] A post with a large header image. [HTML Tags and Formatting Post][html-tags-post] A variety of common markup showing how the theme styles them. [Syntax Highlighting Post][syntax-post] Post displaying highlighted code. [Post with a Gallery][gallery-post] A post showing several images wrapped in <figure> elements. [Sample Collection Page][sample-collection] Single page from a collection. [Categories Archive][categories-archive] Posts grouped by category. [Tags Archive][tags-archive] Posts grouped by tag. For even more demo pages check the [posts archive][year-archive]. [header-image-post]: {{ \"\" | relative_url }}{% post_url 2012-03-15-layout-header-image-text-readability %} [gallery-post]: {{ \"\" | relative_url }}{% post_url 2010-09-09-post-gallery %} [html-tags-post]: {{ \"\" | relative_url }}{% post_url 2013-01-11-markup-html-tags-and-formatting %} [syntax-post]: {{ \"\" | relative_url }}{% post_url 2013-08-16-markup-syntax-highlighting %} [sample-collection]: {{ \"/recipes/chocolate-chip-cookies/\" | relative_url }} [categories-archive]: {{ \"/categories/\" | relative_url }} [tags-archive]: {{ \"/tags/\" | relative_url }} [year-archive]: {{ \"/year-archive/\" | relative_url }}","title":"Demo Pages"},{"location":"_docs/02-about/#credits","text":"","title":"Credits"},{"location":"_docs/02-about/#icons-demo-images","text":"The Noun Project -- Garrett Knoll, Arthur Shlain, and tracy tam Font Awesome Unsplash","title":"Icons + Demo Images:"},{"location":"_docs/02-about/#other","text":"Jekyll jQuery Susy Breakpoint Magnific Popup FitVids.JS Greedy Navigation - lukejacksonn jQuery Smooth Scroll Lunr Minimal Mistakes is designed, developed, and maintained by Michael Rose. Just another boring, tattooed, designer from Buffalo New York.","title":"Other:"}]}